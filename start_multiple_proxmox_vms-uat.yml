---
- name: Start Multiple VMs on Proxmox
  hosts: localhost
  gather_facts: no

  vars:
    proxmox_api_host: "{{ lookup('env', 'https://192.168.1.200:8006') }}"  # Proxmox API URL
    proxmox_api_user: "{{ lookup('env', 'root@pam') }}"  # Proxmox Username
    proxmox_api_password: "{{ lookup('env', '1623af13-06a4-40f1-aca3-4ba3c3a1f273') }}"  # Proxmox Password
    proxmox_node: "{{ lookup('env', 'pve-test1') }}"  # Proxmox Node Name
    vm_ids: [100]  # List of VM IDs to start

  tasks:
    - name: Start each VM
      uri:
        url: "https://192.168.1.200:8006/api2/json/nodes/pve-test1/qemu/item/status/start"
        method: POST
        user: "root@pam"
        password: "1623af13-06a4-40f1-aca3-4ba3c3a1f273"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
        status_code: 200
      loop: "{{ vm_ids }}"
      register: start_results

    - name: Show API responses
      debug:
        var: start_results.results

    - name: Wait for all VMs to be fully started
      uri:
        url: "https://192.168.1.200:8006/api2/json/nodes/pve-test1/qemu/item/status/current"
        method: GET
        user: "root@pam"
        password: "1623af13-06a4-40f1-aca3-4ba3c3a1f273"
        force_basic_auth: yes
        headers:
          Content-Type: "application/json"
      register: vm_status
      until: vm_status.json.data.status == "running"
      retries: 10
      delay: 5
      loop: "{{ vm_ids }}"

    - name: Confirm all VMs are running
      debug:
        msg: "VMs {{ vm_ids }} are now running on Proxmox!"
